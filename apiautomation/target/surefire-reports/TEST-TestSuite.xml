<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="TestSuite" time="13.455" tests="10" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="24"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Program Files\Maven\apache-maven-3.9.9\boot\plexus-classworlds-2.8.0.jar"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Jakarta"/>
    <property name="maven.conf" value="C:\Program Files\Maven\apache-maven-3.9.9/conf"/>
    <property name="java.vm.specification.version" value="24"/>
    <property name="os.name" value="Windows 10"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="ID"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-24\bin"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean test"/>
    <property name="jdk.debug" value="release"/>
    <property name="maven.home" value="C:\Program Files\Maven\apache-maven-3.9.9"/>
    <property name="surefire.test.class.path" value="C:\Users\trisni.yuliana\Downloads\Bootcamp\apiautomation\target\test-classes;C:\Users\trisni.yuliana\Downloads\Bootcamp\apiautomation\target\classes;C:\Users\trisni.yuliana\.m2\repository\org\testng\testng\7.11.0\testng-7.11.0.jar;C:\Users\trisni.yuliana\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\trisni.yuliana\.m2\repository\org\jcommander\jcommander\1.83\jcommander-1.83.jar;C:\Users\trisni.yuliana\.m2\repository\org\webjars\jquery\3.7.1\jquery-3.7.1.jar;C:\Users\trisni.yuliana\.m2\repository\io\rest-assured\rest-assured\5.5.2\rest-assured-5.5.2.jar;C:\Users\trisni.yuliana\.m2\repository\org\apache\groovy\groovy\4.0.22\groovy-4.0.22.jar;C:\Users\trisni.yuliana\.m2\repository\org\apache\groovy\groovy-xml\4.0.22\groovy-xml-4.0.22.jar;C:\Users\trisni.yuliana\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\trisni.yuliana\.m2\repository\org\apache\httpcomponents\httpcore\4.4.13\httpcore-4.4.13.jar;C:\Users\trisni.yuliana\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\trisni.yuliana\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\trisni.yuliana\.m2\repository\org\apache\httpcomponents\httpmime\4.5.13\httpmime-4.5.13.jar;C:\Users\trisni.yuliana\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\trisni.yuliana\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\trisni.yuliana\.m2\repository\io\rest-assured\json-path\5.5.2\json-path-5.5.2.jar;C:\Users\trisni.yuliana\.m2\repository\org\apache\groovy\groovy-json\4.0.22\groovy-json-4.0.22.jar;C:\Users\trisni.yuliana\.m2\repository\io\rest-assured\rest-assured-common\5.5.2\rest-assured-common-5.5.2.jar;C:\Users\trisni.yuliana\.m2\repository\io\rest-assured\xml-path\5.5.2\xml-path-5.5.2.jar;C:\Users\trisni.yuliana\.m2\repository\org\apache\commons\commons-lang3\3.16.0\commons-lang3-3.16.0.jar;C:\Users\trisni.yuliana\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\trisni.yuliana\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.19.0\jackson-annotations-2.19.0.jar;C:\Users\trisni.yuliana\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\trisni.yuliana\.m2\repository\io\rest-assured\json-schema-validator\5.4.0\json-schema-validator-5.4.0.jar;C:\Users\trisni.yuliana\.m2\repository\com\github\java-json-tools\json-schema-validator\2.2.14\json-schema-validator-2.2.14.jar;C:\Users\trisni.yuliana\.m2\repository\com\github\java-json-tools\jackson-coreutils-equivalence\1.0\jackson-coreutils-equivalence-1.0.jar;C:\Users\trisni.yuliana\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\trisni.yuliana\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\trisni.yuliana\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\trisni.yuliana\.m2\repository\com\github\java-json-tools\json-schema-core\1.2.14\json-schema-core-1.2.14.jar;C:\Users\trisni.yuliana\.m2\repository\com\github\java-json-tools\uri-template\0.10\uri-template-0.10.jar;C:\Users\trisni.yuliana\.m2\repository\org\mozilla\rhino\1.7.7.2\rhino-1.7.7.2.jar;C:\Users\trisni.yuliana\.m2\repository\com\sun\mail\mailapi\1.6.2\mailapi-1.6.2.jar;C:\Users\trisni.yuliana\.m2\repository\joda-time\joda-time\2.10.5\joda-time-2.10.5.jar;C:\Users\trisni.yuliana\.m2\repository\com\googlecode\libphonenumber\libphonenumber\8.11.1\libphonenumber-8.11.1.jar;C:\Users\trisni.yuliana\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\trisni.yuliana\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\trisni.yuliana\.m2\repository\com\google\guava\guava\32.0.1-jre\guava-32.0.1-jre.jar;C:\Users\trisni.yuliana\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\trisni.yuliana\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\trisni.yuliana\.m2\repository\org\checkerframework\checker-qual\3.33.0\checker-qual-3.33.0.jar;C:\Users\trisni.yuliana\.m2\repository\com\google\errorprone\error_prone_annotations\2.18.0\error_prone_annotations-2.18.0.jar;C:\Users\trisni.yuliana\.m2\repository\com\google\j2objc\j2objc-annotations\2.8\j2objc-annotations-2.8.jar;C:\Users\trisni.yuliana\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\cucumber-java\7.22.2\cucumber-java-7.22.2.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\cucumber-core\7.22.2\cucumber-core-7.22.2.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\cucumber-gherkin\7.22.2\cucumber-gherkin-7.22.2.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\cucumber-gherkin-messages\7.22.2\cucumber-gherkin-messages-7.22.2.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\gherkin\32.1.1\gherkin-32.1.1.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\messages\27.2.0\messages-27.2.0.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\testng-xml-formatter\0.3.1\testng-xml-formatter-0.3.1.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\query\13.2.0\query-13.2.0.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\tag-expressions\6.1.2\tag-expressions-6.1.2.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\cucumber-expressions\18.0.1\cucumber-expressions-18.0.1.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\datatable\7.22.2\datatable-7.22.2.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\cucumber-plugin\7.22.2\cucumber-plugin-7.22.2.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\docstring\7.22.2\docstring-7.22.2.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\html-formatter\21.10.1\html-formatter-21.10.1.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\junit-xml-formatter\0.7.1\junit-xml-formatter-0.7.1.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\ci-environment\10.0.1\ci-environment-10.0.1.jar;C:\Users\trisni.yuliana\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\cucumber-testng\7.22.2\cucumber-testng-7.22.2.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\cucumber-junit\7.22.2\cucumber-junit-7.22.2.jar;C:\Users\trisni.yuliana\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\trisni.yuliana\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\trisni.yuliana\.m2\repository\io\github\cdimascio\dotenv-java\3.2.0\dotenv-java-3.2.0.jar;C:\Users\trisni.yuliana\.m2\repository\io\cucumber\cucumber-picocontainer\7.22.2\cucumber-picocontainer-7.22.2.jar;C:\Users\trisni.yuliana\.m2\repository\org\picocontainer\picocontainer\2.15.2\picocontainer-2.15.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\trisni.yuliana"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-24"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\trisni.yuliana\Downloads\Bootcamp\apiautomation"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="24.0.1+9-30"/>
    <property name="user.name" value="trisni.yuliana"/>
    <property name="stdout.encoding" value="cp437"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\trisni.yuliana\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\TRISNI~1.YUL\AppData\Local\Temp\"/>
    <property name="java.version" value="24.0.1"/>
    <property name="user.dir" value="C:\Users\trisni.yuliana\Downloads\Bootcamp\apiautomation"/>
    <property name="os.arch" value="amd64"/>
    <property name="maven.multiModuleProjectDirectory" value="C:\Users\trisni.yuliana\Downloads\Bootcamp\apiautomation"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-24\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Player\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\C:\Program Files\Java\jdk-24\bin;C:\Program Files\Maven\apache-maven-3.9.9\bin;C:\Program Files\Git\cmd;C:\Users\trisni.yuliana\AppData\Local\Microsoft\WindowsApps;C:\Users\trisni.yuliana\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\trisni.yuliana\.dotnet\tools;c:\Users\trisni.yuliana\AppData\Roaming\Code\User\globalStorage\github.copilot-chat\debugCommand;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="cp437"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="24.0.1+9-30"/>
    <property name="classworlds.conf" value="C:\Program Files\Maven\apache-maven-3.9.9\bin\m2.conf"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="library.jansi.path" value="C:\Program Files\Maven\apache-maven-3.9.9\lib\jansi-native"/>
    <property name="java.class.version" value="68.0"/>
  </properties>
  <testcase name="runScenario[&quot;Register using valid data&quot;, &quot;API&quot;](1)" classname="runners.TestRunner" time="3.248">
    <system-out><![CDATA[
Scenario: Register using valid data                                          # src/test/resources/features/API.feature:3
Request method:	POST
Request URI:	https://whitesmokehouse.com/webhook/api/register
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "email": "testqa.wrc96@gmail.com",
    "full_name": "Test QA",
    "password": "@dmin123",
    "department": "Technology",
    "phone_number": "085611789000"
}
  When Send request to register with body:                                   # definitions.RefactorDefinition.send_request_register(java.lang.String)
    """
    	{
    		"email": "testqa.wrc96@gmail.com",
    		"full_name": "Test QA",
    		"password": "@dmin123",
    		"department": "Technology",
    		"phone_number": "085611789000"
    	}
    """
  Then The response code must be 200                                         # definitions.RefactorDefinition.validate_status_code(int)
  And The response schema should be match with schema "register-schema.json" # definitions.RefactorDefinition.schema_validation(java.lang.String)
  And The Id is not null                                                     # definitions.RefactorDefinition.validate_id_is_not_null()
  And The email should equal "testqa.wrc96@gmail.com"                        # definitions.RefactorDefinition.validate_email(java.lang.String)
  And The full_name should equal "Test QA"                                   # definitions.RefactorDefinition.validate_full_name(java.lang.String)
  And The department should equal "Technology"                               # definitions.RefactorDefinition.validate_department(java.lang.String)
  And The phone_number should equal "085611789000"                           # definitions.RefactorDefinition.validate_phone_number(java.lang.String)
]]></system-out>
    <system-err><![CDATA[SLF4J(W): No SLF4J providers were found.
SLF4J(W): Defaulting to no-operation (NOP) logger implementation
SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.
]]></system-err>
  </testcase>
  <testcase name="runScenario[&quot;Login using valid credentials&quot;, &quot;API&quot;](2)" classname="runners.TestRunner" time="0.728">
    <system-out><![CDATA[
Scenario: Login using valid credentials                     # src/test/resources/features/API.feature:22
Request method:	POST
Request URI:	https://whitesmokehouse.com/webhook/api/login
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "email": "trisniy097@gmail.com",
    "password": "@dmin123"
}
  When Send request to login with body:                     # definitions.RefactorDefinition.send_request_login(java.lang.String)
    """
        {
            "email": "trisniy097@gmail.com",
            "password": "@dmin123"
        }
    """
  Then The response code must be 200                        # definitions.RefactorDefinition.validate_status_code(int)
Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMiLCJpYXQiOjE3NDk0NzU1NjJ9.Rq9QvomuBivw3P5poEl8lgyCnDv426bSbzGSM-ZUeNs
  And Save the token from the response to the local storage # definitions.RefactorDefinition.save_token()
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Create Object&quot;, &quot;API&quot;](3)" classname="runners.TestRunner" time="1.682">
    <system-out><![CDATA[
Scenario: Create Object                                                # src/test/resources/features/API.feature:33
  Given Have token on the local storage                                # definitions.RefactorDefinition.assert_token_in_variable()
Request method:	POST
Request URI:	https://whitesmokehouse.com/webhook/api/objects
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMiLCJpYXQiOjE3NDk0NzU1NjJ9.Rq9QvomuBivw3P5poEl8lgyCnDv426bSbzGSM-ZUeNs
				Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "name": "Lenovo K14",
    "data": {
        "year": 2024,
        "price": 1849.99,
        "cpu_model": "Intel Core i9",
        "hard_disk_size": "1 TB",
        "capacity": "2 cpu",
        "screen_size": "14 inch",
        "color": "black"
    }
}
  When Send request to create object with body:                        # definitions.RefactorDefinition.send_request_create_object(java.lang.String)
    """
    {
        "name": "Lenovo K14",
        "data": {
            "year": 2024,
            "price": 1849.99,
            "cpu_model": "Intel Core i9",
            "hard_disk_size": "1 TB",
            "capacity": "2 cpu",
            "screen_size": "14 inch",
            "color": "black"
        }
    }
    """
  Then The response code must be 200                                   # definitions.RefactorDefinition.validate_status_code(int)
idObject saved: 1210
  And The idObject is not null                                         # definitions.RefactorDefinition.validate_idObject()
idObject saved: 1210
  And Save the idObject from the response to the local storage         # definitions.RefactorDefinition.save_idObject()
  And The name from the create response should be "Lenovo K14"         # definitions.RefactorDefinition.validate_name(java.lang.String)
  And The year from the create response should be 2024                 # definitions.RefactorDefinition.validate_year(int)
  And The price from the create response should be 1849.99             # definitions.RefactorDefinition.validate_price(double)
  And The cpu_model from the create response should be "Intel Core i9" # definitions.RefactorDefinition.validate_CPUModel(java.lang.String)
  And The hard_disk_size from the create response should be "1 TB"     # definitions.RefactorDefinition.validate_HDSize(java.lang.String)
  And The capacity from the create response should be "2 cpu"          # definitions.RefactorDefinition.validate_capacity(java.lang.String)
  And The screen_size from the create response should be "14 inch"     # definitions.RefactorDefinition.validate_screenSize(java.lang.String)
  And The color from the create response should be "black"             # definitions.RefactorDefinition.validate_color(java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Get All Object&quot;, &quot;API&quot;](4)" classname="runners.TestRunner" time="1.66">
    <system-out><![CDATA[
Scenario: Get All Object                # src/test/resources/features/API.feature:62
  Given Have token on the local storage # definitions.RefactorDefinition.assert_token_in_variable()
Request method:	GET
Request URI:	https://whitesmokehouse.com/webhook/api/objects
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMiLCJpYXQiOjE3NDk0NzU1NjJ9.Rq9QvomuBivw3P5poEl8lgyCnDv426bSbzGSM-ZUeNs
				Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
  When Send request to get all object   # definitions.RefactorDefinition.send_request_get_all_object()
  Then The response code must be 200    # definitions.RefactorDefinition.validate_status_code(int)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Get Single Object&quot;, &quot;API&quot;](5)" classname="runners.TestRunner" time="0.778">
    <system-out><![CDATA[
Scenario: Get Single Object                                                   # src/test/resources/features/API.feature:67
  Given Have token on the local storage                                       # definitions.RefactorDefinition.assert_token_in_variable()
Request method:	GET
Request URI:	https://whitesmokehouse.com/webhook/8749129e-f5f7-4ae6-9b03-93be7252443c/api/objects/1210
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMiLCJpYXQiOjE3NDk0NzU1NjJ9.Rq9QvomuBivw3P5poEl8lgyCnDv426bSbzGSM-ZUeNs
				Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
  When Send request to get single object                                      # definitions.RefactorDefinition.send_request_single_object()
  Then The response code must be 200                                          # definitions.RefactorDefinition.validate_status_code(int)
idObject saved: 1210
  And The idObject is not null                                                # definitions.RefactorDefinition.validate_idObject()
  And The name from the single-object response should be "Lenovo K14"         # definitions.RefactorDefinition.validate_singleName(java.lang.String)
  And The year from the single-object response should be "2024"               # definitions.RefactorDefinition.validate_singleYear(java.lang.String)
  And The price from the single-object response should be "1849.99"           # definitions.RefactorDefinition.validate_singlePrice(java.lang.String)
  And The cpu_model from the single-object response should be "Intel Core i9" # definitions.RefactorDefinition.validate_singleCPUModel(java.lang.String)
  And The hard_disk_size from the single-object response should be "1 TB"     # definitions.RefactorDefinition.validate_singleHDSize(java.lang.String)
  And The capacity from the single-object response should be 2                # definitions.RefactorDefinition.validate_singleCapacity(int)
  And The screen_size from the single-object response should be 14            # definitions.RefactorDefinition.validate_singleScreenSize(int)
  And The color from the single-object response should be "black"             # definitions.RefactorDefinition.validate_singleColor(java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;List Object By Id&quot;, &quot;API&quot;](6)" classname="runners.TestRunner" time="0.651">
    <system-out><![CDATA[
Scenario: List Object By Id                  # src/test/resources/features/API.feature:81
  Given Have token on the local storage      # definitions.RefactorDefinition.assert_token_in_variable()
Request method:	GET
Request URI:	https://whitesmokehouse.com/webhook/api/objectslistId?id=1210
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMiLCJpYXQiOjE3NDk0NzU1NjJ9.Rq9QvomuBivw3P5poEl8lgyCnDv426bSbzGSM-ZUeNs
				Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
  When Send request to get list object by id # definitions.RefactorDefinition.send_request_list_object_by_id()
  Then The response code must be 200         # definitions.RefactorDefinition.validate_status_code(int)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Update Object&quot;, &quot;API&quot;](7)" classname="runners.TestRunner" time="0.811">
    <system-out><![CDATA[
Scenario: Update Object                                                # src/test/resources/features/API.feature:86
  Given Have token on the local storage                                # definitions.RefactorDefinition.assert_token_in_variable()
Request method:	PUT
Request URI:	https://whitesmokehouse.com/webhook/37777abe-a5ef-4570-a383-c99b5f5f7906/api/objects/1210
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMiLCJpYXQiOjE3NDk0NzU1NjJ9.Rq9QvomuBivw3P5poEl8lgyCnDv426bSbzGSM-ZUeNs
				Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "name": "Lenovo Yoga",
    "data": {
        "year": "2025",
        "price": "1999.99",
        "cpu_model": "Intel Core i8",
        "hard_disk_size": "2 TB",
        "color": "gray",
        "capacity": "4",
        "screen_size": "12"
    }
}
  When Send request to update object with body:                        # definitions.RefactorDefinition.send_request_update_object(java.lang.String)
    """
    {
        "name": "Lenovo Yoga",
        "data": {
                "year": "2025",
                "price": "1999.99",
                "cpu_model": "Intel Core i8",
                "hard_disk_size": "2 TB",
                "color": "gray",
                "capacity": "4",
                "screen_size": "12"
            }
    }
    """
  Then The response code must be 200                                   # definitions.RefactorDefinition.validate_status_code(int)
idObject saved: 1210
  And The idObject is not null                                         # definitions.RefactorDefinition.validate_idObject()
  And The name from the update response should be "Lenovo Yoga"        # definitions.RefactorDefinition.validate_updateName(java.lang.String)
  And The year from the update response should be 2025                 # definitions.RefactorDefinition.validate_updateYear(int)
  And The price from the update response should be 1999.99             # definitions.RefactorDefinition.validate_updatePrice(double)
  And The cpu_model from the update response should be "Intel Core i8" # definitions.RefactorDefinition.validate_updateCPUModel(java.lang.String)
  And The hard_disk_size from the update response should be "2 TB"     # definitions.RefactorDefinition.validate_updateHDSize(java.lang.String)
  And The capacity from the update response should be "4"              # definitions.RefactorDefinition.validate_updateCapacity(java.lang.String)
  And The screen_size from the update response should be "12"          # definitions.RefactorDefinition.validate_updateScreenSize(java.lang.String)
  And The color from the update response should be "gray"              # definitions.RefactorDefinition.validate_updateColor(java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Partially Update Object&quot;, &quot;API&quot;](8)" classname="runners.TestRunner" time="0.753">
    <system-out><![CDATA[
Scenario: Partially Update Object                                            # src/test/resources/features/API.feature:115
  Given Have token on the local storage                                      # definitions.RefactorDefinition.assert_token_in_variable()
Request method:	PATCH
Request URI:	https://whitesmokehouse.com/webhook/39a0f904-b0f2-4428-80a3-391cea5d7d04/api/object/1210
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMiLCJpYXQiOjE3NDk0NzU1NjJ9.Rq9QvomuBivw3P5poEl8lgyCnDv426bSbzGSM-ZUeNs
				Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "name": "Lenovo Ideapad",
    "year": "2027",
    "color": "white"
}
  When Send request to partially update object with body:                    # definitions.RefactorDefinition.send_request_partially_update_object(java.lang.String)
    """
    {
        "name": "Lenovo Ideapad",
        "year": "2027",
        "color": "white"
    }
    """
  Then The response code must be 200                                         # definitions.RefactorDefinition.validate_status_code(int)
idObject saved: 1210
  And The idObject is not null                                               # definitions.RefactorDefinition.validate_idObject()
Actual name from response: Lenovo Ideapad
  And The name from the partially update response should be "Lenovo Ideapad" # definitions.RefactorDefinition.validate_partiallyUpdateName(java.lang.String)
  And The year from the partially update response should be "2027"           # definitions.RefactorDefinition.validate_partiallyUpdateYear(java.lang.String)
  And The color from the partially update response should be "white"         # definitions.RefactorDefinition.validate_partiallyUpdateColor(java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Delete Object&quot;, &quot;API&quot;](9)" classname="runners.TestRunner" time="0.623">
    <system-out><![CDATA[
Scenario: Delete Object                 # src/test/resources/features/API.feature:132
  Given Have token on the local storage # definitions.RefactorDefinition.assert_token_in_variable()
Request method:	DELETE
Request URI:	https://whitesmokehouse.com/webhook/d79a30ed-1066-48b6-83f5-556120afc46f/api/objects/1210
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMiLCJpYXQiOjE3NDk0NzU1NjJ9.Rq9QvomuBivw3P5poEl8lgyCnDv426bSbzGSM-ZUeNs
				Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
  When Send request to delete object    # definitions.RefactorDefinition.send_request_delete_object()
  Then The response code must be 200    # definitions.RefactorDefinition.validate_status_code(int)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Department Object&quot;, &quot;API&quot;](10)" classname="runners.TestRunner" time="0.72">
    <system-out><![CDATA[
Scenario: Department Object               # src/test/resources/features/API.feature:137
  Given Have token on the local storage   # definitions.RefactorDefinition.assert_token_in_variable()
Request method:	GET
Request URI:	https://whitesmokehouse.com/webhook/api/department
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMiLCJpYXQiOjE3NDk0NzU1NjJ9.Rq9QvomuBivw3P5poEl8lgyCnDv426bSbzGSM-ZUeNs
				Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
  When Send request to get all department # definitions.RefactorDefinition.send_request_get_all_department()
  Then The response code must be 200      # definitions.RefactorDefinition.validate_status_code(int)
]]></system-out>
  </testcase>
</testsuite>